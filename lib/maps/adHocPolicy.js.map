{"version":3,"sources":["adHocPolicy.js"],"names":["log","_ref","arguments","length","undefined","_ref$policy","policy","_ref$expiration","expiration","console","includes","Error","callback","Function","subscriptionExpiration","Date","setSeconds","getSeconds","note","concat","subscription","subscribe","entry","unsubscribe"],"mappings":"wGAAe,SAAAA,GAAG,OAAI,WAA2C,IAAAC,EAAA,EAAAC,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAAOG,EAAAJ,EAAxCK,OAAAA,OAAwC,IAAAD,EAA/B,GAA+BA,EAAAE,EAAAN,EAA3BO,WAAAA,OAA2B,IAAAD,EAAd,GAAcA,EAE/D,GADAE,QAAQT,IAAI,qBAAsBM,GAC9BA,EAAOI,SAAS,UAClB,MAAMC,MAAM,2DAEd,GAAiB,KAAbH,EACF,MAAMG,MAAM,8DANiD,IAAAC,EAAAC,SAAA,QAAAP,GAAAQ,EAAA,IAAAC,KAAAD,EAAAE,WAAAF,EAAAG,aAAAT,GAAAR,EAAAkB,KAAA,oCAAAC,OAAAL,EAAA,MAAAK,OAAAX,EAAA,cAc/DR,EAAIkB,KAAK,eAbTT,EAAAA,KAAOH,GAePN,EAAIkB,KAAK,eAbP,IAAAE,EAAYpB,EAAAqB,UAAA,SAAAC,GACb,GAAA,IAAAP,KAAAD,EAEC,OAcEM,EAAaG,mBAfjBvB,EAAIQ,KAAAA,6BAmBFI,EAASU","file":"../adHocPolicy.js","sourcesContent":["export default log => ({ policy = '', expiration = 10 } = {}) => {\n  console.log('ad hoc policy time', policy)\n  if (policy.includes('global')) {\n    throw Error('Invalid attempt to update log policy (accessing global)');\n  }\n  if (expiration > 3600) {\n    throw Error('Invalid attempt to update log policy (expiration too long)');\n  }\n\n  const callback = Function('entry', policy); // eslint-disable-line no-new-func\n  const subscriptionExpiration = new Date();\n  subscriptionExpiration.setSeconds(subscriptionExpiration.getSeconds() + expiration);\n\n  log.note(`Enabling ad hoc log policy until ${subscriptionExpiration} (${expiration} seconds)`);\n  log.note('~~~~~~~~~~~');\n  log.note(policy);\n  log.note('~~~~~~~~~~~');\n\n  const subscription = log.subscribe(entry => {\n    if (new Date() > subscriptionExpiration) {\n      subscription.unsubscribe();\n      log.note('Removed ad hoc log policy');\n      return;\n    }\n    callback(entry);\n  });\n};\n"]}