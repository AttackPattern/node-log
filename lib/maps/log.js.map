{"version":3,"sources":["log.js"],"names":["appStart","Date","Log","bus","Bus","extension","LogActivity","this","with","subject","note","name","section","enter","subscription","subscribe","publisher","_classCallCheck3","default","extensions","entries","error","complete","Error","start","entry","LogEntry","method","startTime","exiting","stopTime","publish","_extends3","arguments","length","undefined","trim","entering","publishEntry","push","_this","addNote","_assign2","stack","e","copy","clone","appElapsed","time","elapsed","subscriptions","callback","when","condition","_this2","sub","payload","unsubscribe","filter","next","forEach"],"mappings":"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","file":"../log.js","sourcesContent":["const appStart = new Date();\n\nexport default class Log {\n  bus = new Bus();\n\n  with(extension) {\n    return new LogActivity(this.bus).with(extension);\n  }\n  note(subject) {\n    return new LogActivity(this.bus).note(subject);\n  }\n  enter(name, section) {\n    return new LogActivity(this.bus).enter(name, section);\n  }\n  subscribe(subscription) {\n    return this.bus.subscribe(subscription);\n  }\n}\n\nclass LogActivity {\n  extensions = {}\n  entries = []\n\n  constructor(publisher) {\n    this.publisher = publisher;\n  }\n\n  exit(error) {\n    if (this.complete) {\n      throw new Error('Exiting an unentered activity');\n    }\n    this.complete = true;\n    const start = this.entries[0];\n    const entry = new LogEntry(error || 'exiting activity', start.method);\n    entry.entries = this.entries;\n    entry.startTime = start.time;\n    entry.exiting = true;\n    entry.stopTime = new Date();\n\n    this.publish(entry);\n  }\n\n  note(subject) {\n    if (this.complete) {\n      throw new Error('Note called on a completed activity');\n    }\n    const note = new LogEntry(subject);\n    return this.publish({\n      ...note,\n      ...this.extensions\n    });\n  }\n\n  with(extension) {\n    if (extension) {\n      this.extensions = {\n        ...this.extensions,\n        ...extension\n      };\n    }\n    return this;\n  }\n\n  enter(name = '', section) {\n    this.name = name;\n    const entry = new LogEntry(`entering activity ${this.name}`.trim());\n    entry.entering = true;\n    this.publish(entry);\n\n    if (!section) {\n      this.enter = undefined;\n      return this;\n    }\n\n    try {\n      section(this);\n      this.exit();\n    }\n    catch (e) {\n      this.exit(e);\n      throw e;\n    }\n    return null;\n  }\n\n  publish(entry) {\n    let publishEntry = {\n      ...entry.copy(),\n      ...this.extensions\n    };\n    this.entries.push(publishEntry);\n    this.publisher.publish(publishEntry);\n    return entry;\n  }\n}\n\n\nclass LogEntry {\n  constructor(subject) {\n    this.time = new Date();\n    this.addNote(subject);\n  }\n\n  addNote = note => {\n    if (!note) {\n      return;\n    }\n    if (typeof note === 'string') {\n      this.message = note;\n    }\n    else if (note instanceof Error) {\n      this.error = note;\n    }\n    else {\n      Object.assign(this, note);\n    }\n  }\n\n  stack = () => {\n    return stack({ e: this.error });\n  }\n\n  copy = () => ({\n    ...new LogEntry(null),\n    ...this,\n    clone: true\n  })\n  appStart = () => appStart\n  appElapsed = () => this.time - appStart\n  elapsed = () => Math.max(0, this.time - this.startTime)\n}\n\nclass Bus {\n  subscriptions = []\n  subscribe(callback) {\n    return this.when().subscribe(callback);\n  }\n  when(condition) {\n    return {\n      subscribe: callback => {\n        function sub(payload) {\n          if (!condition || condition(payload)) {\n            callback(payload);\n          }\n        }\n        this.subscriptions.push(sub);\n\n        return {\n          unsubscribe: () => {\n            this.subscriptions = this.subscriptions.filter(next => next !== sub);\n          }\n        };\n      }\n    };\n  }\n  publish(subject) {\n    this.subscriptions.forEach(sub => {\n      try {\n        sub(subject);\n      }\n      catch (e) {\n        // Honey badger\n      }\n    });\n  }\n}\n"]}